Terminals unused in grammar

   TYPE_INT
   TYPE_FLT
   TYPE_STR
   TYPE_CHR
   TYPE_BOOL
   TYPE_CONST
   EXIT


State 84 conflicts: 2 shift/reduce
State 105 conflicts: 19 shift/reduce
State 107 conflicts: 19 shift/reduce
State 108 conflicts: 19 shift/reduce
State 109 conflicts: 19 shift/reduce
State 110 conflicts: 19 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program stmt
    2        | /* empty */

    3 stmt: ';'
    4     | expr ';'
    5     | VARIABLE '=' expr ';'
    6     | PRINT expr ';'
    7     | BREAK ';'
    8     | SWITCH '(' VARIABLE ')' case_list case_default
    9     | IF '(' expr ')' stmt
   10     | IF '(' expr ')' stmt ELSE stmt
   11     | FOR '(' VARIABLE '=' expr ';' expr ';' VARIABLE '=' expr ')' stmt
   12     | REPEAT stmt UNTIL '(' expr ')' ';'
   13     | WHILE '(' expr ')' stmt
   14     | '{' stmt_list '}'

   15 case_default: DEFAULT ':' stmt_list
   16             | /* empty */

   17 case_list: case_list CASE INTEGER ':' stmt_list
   18          | case_list CASE CHAR ':' stmt_list
   19          | case_list CASE VAL_FALSE ':' stmt_list
   20          | case_list CASE VAL_TRUE ':' stmt_list
   21          | /* empty */

   22 stmt_list: stmt
   23          | stmt_list stmt

   24 expr: INTEGER
   25     | FLOAT
   26     | CHAR
   27     | STRING
   28     | VAL_TRUE
   29     | VAL_FALSE
   30     | VARIABLE
   31     | '-' expr
   32     | expr '+' expr
   33     | expr '-' expr
   34     | expr '*' expr
   35     | expr '/' expr
   36     | expr '%' expr
   37     | expr AND expr
   38     | expr OR expr
   39     | '!' expr
   40     | expr '>' expr
   41     | expr '<' expr
   42     | expr LE expr
   43     | expr GE expr
   44     | expr EQ expr
   45     | expr NE expr
   46     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 39
'%' (37) 36
'(' (40) 8 9 10 11 12 13 46
')' (41) 8 9 10 11 12 13 46
'*' (42) 34
'+' (43) 32
'-' (45) 31 33
'/' (47) 35
':' (58) 15 17 18 19 20
';' (59) 3 4 5 6 7 11 12
'<' (60) 41
'=' (61) 5 11
'>' (62) 40
'{' (123) 14
'}' (125) 14
error (256)
INTEGER (258) 17 24
FLOAT (259) 25
CHAR (260) 18 26
STRING (261) 27
VAL_TRUE (262) 20 28
VAL_FALSE (263) 19 29
VARIABLE (264) 5 8 11 30
TYPE_INT (265)
TYPE_FLT (266)
TYPE_STR (267)
TYPE_CHR (268)
TYPE_BOOL (269)
TYPE_CONST (270)
EXIT (271)
IF (272) 9 10
ELSE (273) 10
WHILE (274) 13
FOR (275) 11
SWITCH (276) 8
CASE (277) 17 18 19 20
DEFAULT (278) 15
BREAK (279) 7
REPEAT (280) 12
UNTIL (281) 12
PRINT (282) 6
IFX (283)
OR (284) 38
AND (285) 37
NE (286) 45
EQ (287) 44
GE (288) 43
LE (289) 42
UMINUS (290)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1 2, on right: 0 1
stmt (53)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14, on right: 1 9 10 11 12 13
    22 23
case_default (54)
    on left: 15 16, on right: 8
case_list (55)
    on left: 17 18 19 20 21, on right: 8 17 18 19 20
stmt_list (56)
    on left: 22 23, on right: 14 15 17 18 19 20 23
expr (57)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41
    42 43 44 45 46, on right: 4 5 6 9 10 11 12 13 31 32 33 34 35 36
    37 38 39 40 41 42 43 44 45 46


state 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


state 1

    0 $accept: program . $end
    1 program: program . stmt

    $end       shift, and go to state 2
    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    SWITCH     shift, and go to state 13
    BREAK      shift, and go to state 14
    REPEAT     shift, and go to state 15
    PRINT      shift, and go to state 16
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    ';'        shift, and go to state 19
    '('        shift, and go to state 20
    '{'        shift, and go to state 21

    stmt  go to state 22
    expr  go to state 23


state 2

    0 $accept: program $end .

    $default  accept


state 3

   24 expr: INTEGER .

    $default  reduce using rule 24 (expr)


state 4

   25 expr: FLOAT .

    $default  reduce using rule 25 (expr)


state 5

   26 expr: CHAR .

    $default  reduce using rule 26 (expr)


state 6

   27 expr: STRING .

    $default  reduce using rule 27 (expr)


state 7

   28 expr: VAL_TRUE .

    $default  reduce using rule 28 (expr)


state 8

   29 expr: VAL_FALSE .

    $default  reduce using rule 29 (expr)


state 9

    5 stmt: VARIABLE . '=' expr ';'
   30 expr: VARIABLE .

    '='  shift, and go to state 24

    $default  reduce using rule 30 (expr)


state 10

    9 stmt: IF . '(' expr ')' stmt
   10     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 25


state 11

   13 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 26


state 12

   11 stmt: FOR . '(' VARIABLE '=' expr ';' expr ';' VARIABLE '=' expr ')' stmt

    '('  shift, and go to state 27


state 13

    8 stmt: SWITCH . '(' VARIABLE ')' case_list case_default

    '('  shift, and go to state 28


state 14

    7 stmt: BREAK . ';'

    ';'  shift, and go to state 29


state 15

   12 stmt: REPEAT . stmt UNTIL '(' expr ')' ';'

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    SWITCH     shift, and go to state 13
    BREAK      shift, and go to state 14
    REPEAT     shift, and go to state 15
    PRINT      shift, and go to state 16
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    ';'        shift, and go to state 19
    '('        shift, and go to state 20
    '{'        shift, and go to state 21

    stmt  go to state 30
    expr  go to state 23


state 16

    6 stmt: PRINT . expr ';'

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 32


state 17

   31 expr: '-' . expr

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 33


state 18

   39 expr: '!' . expr

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 34


state 19

    3 stmt: ';' .

    $default  reduce using rule 3 (stmt)


state 20

   46 expr: '(' . expr ')'

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 35


state 21

   14 stmt: '{' . stmt_list '}'

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    SWITCH     shift, and go to state 13
    BREAK      shift, and go to state 14
    REPEAT     shift, and go to state 15
    PRINT      shift, and go to state 16
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    ';'        shift, and go to state 19
    '('        shift, and go to state 20
    '{'        shift, and go to state 21

    stmt       go to state 36
    stmt_list  go to state 37
    expr       go to state 23


state 22

    1 program: program stmt .

    $default  reduce using rule 1 (program)


state 23

    4 stmt: expr . ';'
   32 expr: expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | expr . '%' expr
   37     | expr . AND expr
   38     | expr . OR expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . LE expr
   43     | expr . GE expr
   44     | expr . EQ expr
   45     | expr . NE expr

    OR   shift, and go to state 38
    AND  shift, and go to state 39
    NE   shift, and go to state 40
    EQ   shift, and go to state 41
    '<'  shift, and go to state 42
    '>'  shift, and go to state 43
    GE   shift, and go to state 44
    LE   shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50
    ';'  shift, and go to state 51


state 24

    5 stmt: VARIABLE '=' . expr ';'

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 52


state 25

    9 stmt: IF '(' . expr ')' stmt
   10     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 53


state 26

   13 stmt: WHILE '(' . expr ')' stmt

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 54


state 27

   11 stmt: FOR '(' . VARIABLE '=' expr ';' expr ';' VARIABLE '=' expr ')' stmt

    VARIABLE  shift, and go to state 55


state 28

    8 stmt: SWITCH '(' . VARIABLE ')' case_list case_default

    VARIABLE  shift, and go to state 56


state 29

    7 stmt: BREAK ';' .

    $default  reduce using rule 7 (stmt)


state 30

   12 stmt: REPEAT stmt . UNTIL '(' expr ')' ';'

    UNTIL  shift, and go to state 57


state 31

   30 expr: VARIABLE .

    $default  reduce using rule 30 (expr)


state 32

    6 stmt: PRINT expr . ';'
   32 expr: expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | expr . '%' expr
   37     | expr . AND expr
   38     | expr . OR expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . LE expr
   43     | expr . GE expr
   44     | expr . EQ expr
   45     | expr . NE expr

    OR   shift, and go to state 38
    AND  shift, and go to state 39
    NE   shift, and go to state 40
    EQ   shift, and go to state 41
    '<'  shift, and go to state 42
    '>'  shift, and go to state 43
    GE   shift, and go to state 44
    LE   shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50
    ';'  shift, and go to state 58


state 33

   31 expr: '-' expr .
   32     | expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | expr . '%' expr
   37     | expr . AND expr
   38     | expr . OR expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . LE expr
   43     | expr . GE expr
   44     | expr . EQ expr
   45     | expr . NE expr

    $default  reduce using rule 31 (expr)


state 34

   32 expr: expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | expr . '%' expr
   37     | expr . AND expr
   38     | expr . OR expr
   39     | '!' expr .
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . LE expr
   43     | expr . GE expr
   44     | expr . EQ expr
   45     | expr . NE expr

    $default  reduce using rule 39 (expr)


state 35

   32 expr: expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | expr . '%' expr
   37     | expr . AND expr
   38     | expr . OR expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . LE expr
   43     | expr . GE expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | '(' expr . ')'

    OR   shift, and go to state 38
    AND  shift, and go to state 39
    NE   shift, and go to state 40
    EQ   shift, and go to state 41
    '<'  shift, and go to state 42
    '>'  shift, and go to state 43
    GE   shift, and go to state 44
    LE   shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50
    ')'  shift, and go to state 59


state 36

   22 stmt_list: stmt .

    $default  reduce using rule 22 (stmt_list)


state 37

   14 stmt: '{' stmt_list . '}'
   23 stmt_list: stmt_list . stmt

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    SWITCH     shift, and go to state 13
    BREAK      shift, and go to state 14
    REPEAT     shift, and go to state 15
    PRINT      shift, and go to state 16
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    ';'        shift, and go to state 19
    '('        shift, and go to state 20
    '{'        shift, and go to state 21
    '}'        shift, and go to state 60

    stmt  go to state 61
    expr  go to state 23


state 38

   38 expr: expr OR . expr

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 62


state 39

   37 expr: expr AND . expr

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 63


state 40

   45 expr: expr NE . expr

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 64


state 41

   44 expr: expr EQ . expr

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 65


state 42

   41 expr: expr '<' . expr

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 66


state 43

   40 expr: expr '>' . expr

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 67


state 44

   43 expr: expr GE . expr

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 68


state 45

   42 expr: expr LE . expr

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 69


state 46

   32 expr: expr '+' . expr

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 70


state 47

   33 expr: expr '-' . expr

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 71


state 48

   34 expr: expr '*' . expr

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 72


state 49

   35 expr: expr '/' . expr

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 73


state 50

   36 expr: expr '%' . expr

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 74


state 51

    4 stmt: expr ';' .

    $default  reduce using rule 4 (stmt)


state 52

    5 stmt: VARIABLE '=' expr . ';'
   32 expr: expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | expr . '%' expr
   37     | expr . AND expr
   38     | expr . OR expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . LE expr
   43     | expr . GE expr
   44     | expr . EQ expr
   45     | expr . NE expr

    OR   shift, and go to state 38
    AND  shift, and go to state 39
    NE   shift, and go to state 40
    EQ   shift, and go to state 41
    '<'  shift, and go to state 42
    '>'  shift, and go to state 43
    GE   shift, and go to state 44
    LE   shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50
    ';'  shift, and go to state 75


state 53

    9 stmt: IF '(' expr . ')' stmt
   10     | IF '(' expr . ')' stmt ELSE stmt
   32 expr: expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | expr . '%' expr
   37     | expr . AND expr
   38     | expr . OR expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . LE expr
   43     | expr . GE expr
   44     | expr . EQ expr
   45     | expr . NE expr

    OR   shift, and go to state 38
    AND  shift, and go to state 39
    NE   shift, and go to state 40
    EQ   shift, and go to state 41
    '<'  shift, and go to state 42
    '>'  shift, and go to state 43
    GE   shift, and go to state 44
    LE   shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50
    ')'  shift, and go to state 76


state 54

   13 stmt: WHILE '(' expr . ')' stmt
   32 expr: expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | expr . '%' expr
   37     | expr . AND expr
   38     | expr . OR expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . LE expr
   43     | expr . GE expr
   44     | expr . EQ expr
   45     | expr . NE expr

    OR   shift, and go to state 38
    AND  shift, and go to state 39
    NE   shift, and go to state 40
    EQ   shift, and go to state 41
    '<'  shift, and go to state 42
    '>'  shift, and go to state 43
    GE   shift, and go to state 44
    LE   shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50
    ')'  shift, and go to state 77


state 55

   11 stmt: FOR '(' VARIABLE . '=' expr ';' expr ';' VARIABLE '=' expr ')' stmt

    '='  shift, and go to state 78


state 56

    8 stmt: SWITCH '(' VARIABLE . ')' case_list case_default

    ')'  shift, and go to state 79


state 57

   12 stmt: REPEAT stmt UNTIL . '(' expr ')' ';'

    '('  shift, and go to state 80


state 58

    6 stmt: PRINT expr ';' .

    $default  reduce using rule 6 (stmt)


state 59

   46 expr: '(' expr ')' .

    $default  reduce using rule 46 (expr)


state 60

   14 stmt: '{' stmt_list '}' .

    $default  reduce using rule 14 (stmt)


state 61

   23 stmt_list: stmt_list stmt .

    $default  reduce using rule 23 (stmt_list)


state 62

   32 expr: expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | expr . '%' expr
   37     | expr . AND expr
   38     | expr . OR expr
   38     | expr OR expr .
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . LE expr
   43     | expr . GE expr
   44     | expr . EQ expr
   45     | expr . NE expr

    AND  shift, and go to state 39
    NE   shift, and go to state 40
    EQ   shift, and go to state 41
    '<'  shift, and go to state 42
    '>'  shift, and go to state 43
    GE   shift, and go to state 44
    LE   shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50

    $default  reduce using rule 38 (expr)


state 63

   32 expr: expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | expr . '%' expr
   37     | expr . AND expr
   37     | expr AND expr .
   38     | expr . OR expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . LE expr
   43     | expr . GE expr
   44     | expr . EQ expr
   45     | expr . NE expr

    NE   shift, and go to state 40
    EQ   shift, and go to state 41
    '<'  shift, and go to state 42
    '>'  shift, and go to state 43
    GE   shift, and go to state 44
    LE   shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50

    $default  reduce using rule 37 (expr)


state 64

   32 expr: expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | expr . '%' expr
   37     | expr . AND expr
   38     | expr . OR expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . LE expr
   43     | expr . GE expr
   44     | expr . EQ expr
   45     | expr . NE expr
   45     | expr NE expr .

    '<'  shift, and go to state 42
    '>'  shift, and go to state 43
    GE   shift, and go to state 44
    LE   shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50

    $default  reduce using rule 45 (expr)


state 65

   32 expr: expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | expr . '%' expr
   37     | expr . AND expr
   38     | expr . OR expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . LE expr
   43     | expr . GE expr
   44     | expr . EQ expr
   44     | expr EQ expr .
   45     | expr . NE expr

    '<'  shift, and go to state 42
    '>'  shift, and go to state 43
    GE   shift, and go to state 44
    LE   shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50

    $default  reduce using rule 44 (expr)


state 66

   32 expr: expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | expr . '%' expr
   37     | expr . AND expr
   38     | expr . OR expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   41     | expr '<' expr .
   42     | expr . LE expr
   43     | expr . GE expr
   44     | expr . EQ expr
   45     | expr . NE expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50

    $default  reduce using rule 41 (expr)


state 67

   32 expr: expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | expr . '%' expr
   37     | expr . AND expr
   38     | expr . OR expr
   40     | expr . '>' expr
   40     | expr '>' expr .
   41     | expr . '<' expr
   42     | expr . LE expr
   43     | expr . GE expr
   44     | expr . EQ expr
   45     | expr . NE expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50

    $default  reduce using rule 40 (expr)


state 68

   32 expr: expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | expr . '%' expr
   37     | expr . AND expr
   38     | expr . OR expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . LE expr
   43     | expr . GE expr
   43     | expr GE expr .
   44     | expr . EQ expr
   45     | expr . NE expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50

    $default  reduce using rule 43 (expr)


state 69

   32 expr: expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | expr . '%' expr
   37     | expr . AND expr
   38     | expr . OR expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . LE expr
   42     | expr LE expr .
   43     | expr . GE expr
   44     | expr . EQ expr
   45     | expr . NE expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50

    $default  reduce using rule 42 (expr)


state 70

   32 expr: expr . '+' expr
   32     | expr '+' expr .
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | expr . '%' expr
   37     | expr . AND expr
   38     | expr . OR expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . LE expr
   43     | expr . GE expr
   44     | expr . EQ expr
   45     | expr . NE expr

    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50

    $default  reduce using rule 32 (expr)


state 71

   32 expr: expr . '+' expr
   33     | expr . '-' expr
   33     | expr '-' expr .
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | expr . '%' expr
   37     | expr . AND expr
   38     | expr . OR expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . LE expr
   43     | expr . GE expr
   44     | expr . EQ expr
   45     | expr . NE expr

    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50

    $default  reduce using rule 33 (expr)


state 72

   32 expr: expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   34     | expr '*' expr .
   35     | expr . '/' expr
   36     | expr . '%' expr
   37     | expr . AND expr
   38     | expr . OR expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . LE expr
   43     | expr . GE expr
   44     | expr . EQ expr
   45     | expr . NE expr

    $default  reduce using rule 34 (expr)


state 73

   32 expr: expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   35     | expr '/' expr .
   36     | expr . '%' expr
   37     | expr . AND expr
   38     | expr . OR expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . LE expr
   43     | expr . GE expr
   44     | expr . EQ expr
   45     | expr . NE expr

    $default  reduce using rule 35 (expr)


state 74

   32 expr: expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | expr . '%' expr
   36     | expr '%' expr .
   37     | expr . AND expr
   38     | expr . OR expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . LE expr
   43     | expr . GE expr
   44     | expr . EQ expr
   45     | expr . NE expr

    $default  reduce using rule 36 (expr)


state 75

    5 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 5 (stmt)


state 76

    9 stmt: IF '(' expr ')' . stmt
   10     | IF '(' expr ')' . stmt ELSE stmt

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    SWITCH     shift, and go to state 13
    BREAK      shift, and go to state 14
    REPEAT     shift, and go to state 15
    PRINT      shift, and go to state 16
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    ';'        shift, and go to state 19
    '('        shift, and go to state 20
    '{'        shift, and go to state 21

    stmt  go to state 81
    expr  go to state 23


state 77

   13 stmt: WHILE '(' expr ')' . stmt

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    SWITCH     shift, and go to state 13
    BREAK      shift, and go to state 14
    REPEAT     shift, and go to state 15
    PRINT      shift, and go to state 16
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    ';'        shift, and go to state 19
    '('        shift, and go to state 20
    '{'        shift, and go to state 21

    stmt  go to state 82
    expr  go to state 23


state 78

   11 stmt: FOR '(' VARIABLE '=' . expr ';' expr ';' VARIABLE '=' expr ')' stmt

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 83


state 79

    8 stmt: SWITCH '(' VARIABLE ')' . case_list case_default

    $default  reduce using rule 21 (case_list)

    case_list  go to state 84


state 80

   12 stmt: REPEAT stmt UNTIL '(' . expr ')' ';'

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 85


state 81

    9 stmt: IF '(' expr ')' stmt .
   10     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 86

    $default  reduce using rule 9 (stmt)


state 82

   13 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 13 (stmt)


state 83

   11 stmt: FOR '(' VARIABLE '=' expr . ';' expr ';' VARIABLE '=' expr ')' stmt
   32 expr: expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | expr . '%' expr
   37     | expr . AND expr
   38     | expr . OR expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . LE expr
   43     | expr . GE expr
   44     | expr . EQ expr
   45     | expr . NE expr

    OR   shift, and go to state 38
    AND  shift, and go to state 39
    NE   shift, and go to state 40
    EQ   shift, and go to state 41
    '<'  shift, and go to state 42
    '>'  shift, and go to state 43
    GE   shift, and go to state 44
    LE   shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50
    ';'  shift, and go to state 87


state 84

    8 stmt: SWITCH '(' VARIABLE ')' case_list . case_default
   17 case_list: case_list . CASE INTEGER ':' stmt_list
   18          | case_list . CASE CHAR ':' stmt_list
   19          | case_list . CASE VAL_FALSE ':' stmt_list
   20          | case_list . CASE VAL_TRUE ':' stmt_list

    CASE     shift, and go to state 88
    DEFAULT  shift, and go to state 89

    CASE      [reduce using rule 16 (case_default)]
    DEFAULT   [reduce using rule 16 (case_default)]
    $default  reduce using rule 16 (case_default)

    case_default  go to state 90


state 85

   12 stmt: REPEAT stmt UNTIL '(' expr . ')' ';'
   32 expr: expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | expr . '%' expr
   37     | expr . AND expr
   38     | expr . OR expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . LE expr
   43     | expr . GE expr
   44     | expr . EQ expr
   45     | expr . NE expr

    OR   shift, and go to state 38
    AND  shift, and go to state 39
    NE   shift, and go to state 40
    EQ   shift, and go to state 41
    '<'  shift, and go to state 42
    '>'  shift, and go to state 43
    GE   shift, and go to state 44
    LE   shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50
    ')'  shift, and go to state 91


state 86

   10 stmt: IF '(' expr ')' stmt ELSE . stmt

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    SWITCH     shift, and go to state 13
    BREAK      shift, and go to state 14
    REPEAT     shift, and go to state 15
    PRINT      shift, and go to state 16
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    ';'        shift, and go to state 19
    '('        shift, and go to state 20
    '{'        shift, and go to state 21

    stmt  go to state 92
    expr  go to state 23


state 87

   11 stmt: FOR '(' VARIABLE '=' expr ';' . expr ';' VARIABLE '=' expr ')' stmt

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 93


state 88

   17 case_list: case_list CASE . INTEGER ':' stmt_list
   18          | case_list CASE . CHAR ':' stmt_list
   19          | case_list CASE . VAL_FALSE ':' stmt_list
   20          | case_list CASE . VAL_TRUE ':' stmt_list

    INTEGER    shift, and go to state 94
    CHAR       shift, and go to state 95
    VAL_TRUE   shift, and go to state 96
    VAL_FALSE  shift, and go to state 97


state 89

   15 case_default: DEFAULT . ':' stmt_list

    ':'  shift, and go to state 98


state 90

    8 stmt: SWITCH '(' VARIABLE ')' case_list case_default .

    $default  reduce using rule 8 (stmt)


state 91

   12 stmt: REPEAT stmt UNTIL '(' expr ')' . ';'

    ';'  shift, and go to state 99


state 92

   10 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 10 (stmt)


state 93

   11 stmt: FOR '(' VARIABLE '=' expr ';' expr . ';' VARIABLE '=' expr ')' stmt
   32 expr: expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | expr . '%' expr
   37     | expr . AND expr
   38     | expr . OR expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . LE expr
   43     | expr . GE expr
   44     | expr . EQ expr
   45     | expr . NE expr

    OR   shift, and go to state 38
    AND  shift, and go to state 39
    NE   shift, and go to state 40
    EQ   shift, and go to state 41
    '<'  shift, and go to state 42
    '>'  shift, and go to state 43
    GE   shift, and go to state 44
    LE   shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50
    ';'  shift, and go to state 100


state 94

   17 case_list: case_list CASE INTEGER . ':' stmt_list

    ':'  shift, and go to state 101


state 95

   18 case_list: case_list CASE CHAR . ':' stmt_list

    ':'  shift, and go to state 102


state 96

   20 case_list: case_list CASE VAL_TRUE . ':' stmt_list

    ':'  shift, and go to state 103


state 97

   19 case_list: case_list CASE VAL_FALSE . ':' stmt_list

    ':'  shift, and go to state 104


state 98

   15 case_default: DEFAULT ':' . stmt_list

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    SWITCH     shift, and go to state 13
    BREAK      shift, and go to state 14
    REPEAT     shift, and go to state 15
    PRINT      shift, and go to state 16
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    ';'        shift, and go to state 19
    '('        shift, and go to state 20
    '{'        shift, and go to state 21

    stmt       go to state 36
    stmt_list  go to state 105
    expr       go to state 23


state 99

   12 stmt: REPEAT stmt UNTIL '(' expr ')' ';' .

    $default  reduce using rule 12 (stmt)


state 100

   11 stmt: FOR '(' VARIABLE '=' expr ';' expr ';' . VARIABLE '=' expr ')' stmt

    VARIABLE  shift, and go to state 106


state 101

   17 case_list: case_list CASE INTEGER ':' . stmt_list

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    SWITCH     shift, and go to state 13
    BREAK      shift, and go to state 14
    REPEAT     shift, and go to state 15
    PRINT      shift, and go to state 16
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    ';'        shift, and go to state 19
    '('        shift, and go to state 20
    '{'        shift, and go to state 21

    stmt       go to state 36
    stmt_list  go to state 107
    expr       go to state 23


state 102

   18 case_list: case_list CASE CHAR ':' . stmt_list

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    SWITCH     shift, and go to state 13
    BREAK      shift, and go to state 14
    REPEAT     shift, and go to state 15
    PRINT      shift, and go to state 16
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    ';'        shift, and go to state 19
    '('        shift, and go to state 20
    '{'        shift, and go to state 21

    stmt       go to state 36
    stmt_list  go to state 108
    expr       go to state 23


state 103

   20 case_list: case_list CASE VAL_TRUE ':' . stmt_list

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    SWITCH     shift, and go to state 13
    BREAK      shift, and go to state 14
    REPEAT     shift, and go to state 15
    PRINT      shift, and go to state 16
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    ';'        shift, and go to state 19
    '('        shift, and go to state 20
    '{'        shift, and go to state 21

    stmt       go to state 36
    stmt_list  go to state 109
    expr       go to state 23


state 104

   19 case_list: case_list CASE VAL_FALSE ':' . stmt_list

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    SWITCH     shift, and go to state 13
    BREAK      shift, and go to state 14
    REPEAT     shift, and go to state 15
    PRINT      shift, and go to state 16
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    ';'        shift, and go to state 19
    '('        shift, and go to state 20
    '{'        shift, and go to state 21

    stmt       go to state 36
    stmt_list  go to state 110
    expr       go to state 23


state 105

   15 case_default: DEFAULT ':' stmt_list .
   23 stmt_list: stmt_list . stmt

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    SWITCH     shift, and go to state 13
    BREAK      shift, and go to state 14
    REPEAT     shift, and go to state 15
    PRINT      shift, and go to state 16
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    ';'        shift, and go to state 19
    '('        shift, and go to state 20
    '{'        shift, and go to state 21

    INTEGER    [reduce using rule 15 (case_default)]
    FLOAT      [reduce using rule 15 (case_default)]
    CHAR       [reduce using rule 15 (case_default)]
    STRING     [reduce using rule 15 (case_default)]
    VAL_TRUE   [reduce using rule 15 (case_default)]
    VAL_FALSE  [reduce using rule 15 (case_default)]
    VARIABLE   [reduce using rule 15 (case_default)]
    IF         [reduce using rule 15 (case_default)]
    WHILE      [reduce using rule 15 (case_default)]
    FOR        [reduce using rule 15 (case_default)]
    SWITCH     [reduce using rule 15 (case_default)]
    BREAK      [reduce using rule 15 (case_default)]
    REPEAT     [reduce using rule 15 (case_default)]
    PRINT      [reduce using rule 15 (case_default)]
    '-'        [reduce using rule 15 (case_default)]
    '!'        [reduce using rule 15 (case_default)]
    ';'        [reduce using rule 15 (case_default)]
    '('        [reduce using rule 15 (case_default)]
    '{'        [reduce using rule 15 (case_default)]
    $default   reduce using rule 15 (case_default)

    stmt  go to state 61
    expr  go to state 23


state 106

   11 stmt: FOR '(' VARIABLE '=' expr ';' expr ';' VARIABLE . '=' expr ')' stmt

    '='  shift, and go to state 111


state 107

   17 case_list: case_list CASE INTEGER ':' stmt_list .
   23 stmt_list: stmt_list . stmt

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    SWITCH     shift, and go to state 13
    BREAK      shift, and go to state 14
    REPEAT     shift, and go to state 15
    PRINT      shift, and go to state 16
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    ';'        shift, and go to state 19
    '('        shift, and go to state 20
    '{'        shift, and go to state 21

    INTEGER    [reduce using rule 17 (case_list)]
    FLOAT      [reduce using rule 17 (case_list)]
    CHAR       [reduce using rule 17 (case_list)]
    STRING     [reduce using rule 17 (case_list)]
    VAL_TRUE   [reduce using rule 17 (case_list)]
    VAL_FALSE  [reduce using rule 17 (case_list)]
    VARIABLE   [reduce using rule 17 (case_list)]
    IF         [reduce using rule 17 (case_list)]
    WHILE      [reduce using rule 17 (case_list)]
    FOR        [reduce using rule 17 (case_list)]
    SWITCH     [reduce using rule 17 (case_list)]
    BREAK      [reduce using rule 17 (case_list)]
    REPEAT     [reduce using rule 17 (case_list)]
    PRINT      [reduce using rule 17 (case_list)]
    '-'        [reduce using rule 17 (case_list)]
    '!'        [reduce using rule 17 (case_list)]
    ';'        [reduce using rule 17 (case_list)]
    '('        [reduce using rule 17 (case_list)]
    '{'        [reduce using rule 17 (case_list)]
    $default   reduce using rule 17 (case_list)

    stmt  go to state 61
    expr  go to state 23


state 108

   18 case_list: case_list CASE CHAR ':' stmt_list .
   23 stmt_list: stmt_list . stmt

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    SWITCH     shift, and go to state 13
    BREAK      shift, and go to state 14
    REPEAT     shift, and go to state 15
    PRINT      shift, and go to state 16
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    ';'        shift, and go to state 19
    '('        shift, and go to state 20
    '{'        shift, and go to state 21

    INTEGER    [reduce using rule 18 (case_list)]
    FLOAT      [reduce using rule 18 (case_list)]
    CHAR       [reduce using rule 18 (case_list)]
    STRING     [reduce using rule 18 (case_list)]
    VAL_TRUE   [reduce using rule 18 (case_list)]
    VAL_FALSE  [reduce using rule 18 (case_list)]
    VARIABLE   [reduce using rule 18 (case_list)]
    IF         [reduce using rule 18 (case_list)]
    WHILE      [reduce using rule 18 (case_list)]
    FOR        [reduce using rule 18 (case_list)]
    SWITCH     [reduce using rule 18 (case_list)]
    BREAK      [reduce using rule 18 (case_list)]
    REPEAT     [reduce using rule 18 (case_list)]
    PRINT      [reduce using rule 18 (case_list)]
    '-'        [reduce using rule 18 (case_list)]
    '!'        [reduce using rule 18 (case_list)]
    ';'        [reduce using rule 18 (case_list)]
    '('        [reduce using rule 18 (case_list)]
    '{'        [reduce using rule 18 (case_list)]
    $default   reduce using rule 18 (case_list)

    stmt  go to state 61
    expr  go to state 23


state 109

   20 case_list: case_list CASE VAL_TRUE ':' stmt_list .
   23 stmt_list: stmt_list . stmt

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    SWITCH     shift, and go to state 13
    BREAK      shift, and go to state 14
    REPEAT     shift, and go to state 15
    PRINT      shift, and go to state 16
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    ';'        shift, and go to state 19
    '('        shift, and go to state 20
    '{'        shift, and go to state 21

    INTEGER    [reduce using rule 20 (case_list)]
    FLOAT      [reduce using rule 20 (case_list)]
    CHAR       [reduce using rule 20 (case_list)]
    STRING     [reduce using rule 20 (case_list)]
    VAL_TRUE   [reduce using rule 20 (case_list)]
    VAL_FALSE  [reduce using rule 20 (case_list)]
    VARIABLE   [reduce using rule 20 (case_list)]
    IF         [reduce using rule 20 (case_list)]
    WHILE      [reduce using rule 20 (case_list)]
    FOR        [reduce using rule 20 (case_list)]
    SWITCH     [reduce using rule 20 (case_list)]
    BREAK      [reduce using rule 20 (case_list)]
    REPEAT     [reduce using rule 20 (case_list)]
    PRINT      [reduce using rule 20 (case_list)]
    '-'        [reduce using rule 20 (case_list)]
    '!'        [reduce using rule 20 (case_list)]
    ';'        [reduce using rule 20 (case_list)]
    '('        [reduce using rule 20 (case_list)]
    '{'        [reduce using rule 20 (case_list)]
    $default   reduce using rule 20 (case_list)

    stmt  go to state 61
    expr  go to state 23


state 110

   19 case_list: case_list CASE VAL_FALSE ':' stmt_list .
   23 stmt_list: stmt_list . stmt

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    SWITCH     shift, and go to state 13
    BREAK      shift, and go to state 14
    REPEAT     shift, and go to state 15
    PRINT      shift, and go to state 16
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    ';'        shift, and go to state 19
    '('        shift, and go to state 20
    '{'        shift, and go to state 21

    INTEGER    [reduce using rule 19 (case_list)]
    FLOAT      [reduce using rule 19 (case_list)]
    CHAR       [reduce using rule 19 (case_list)]
    STRING     [reduce using rule 19 (case_list)]
    VAL_TRUE   [reduce using rule 19 (case_list)]
    VAL_FALSE  [reduce using rule 19 (case_list)]
    VARIABLE   [reduce using rule 19 (case_list)]
    IF         [reduce using rule 19 (case_list)]
    WHILE      [reduce using rule 19 (case_list)]
    FOR        [reduce using rule 19 (case_list)]
    SWITCH     [reduce using rule 19 (case_list)]
    BREAK      [reduce using rule 19 (case_list)]
    REPEAT     [reduce using rule 19 (case_list)]
    PRINT      [reduce using rule 19 (case_list)]
    '-'        [reduce using rule 19 (case_list)]
    '!'        [reduce using rule 19 (case_list)]
    ';'        [reduce using rule 19 (case_list)]
    '('        [reduce using rule 19 (case_list)]
    '{'        [reduce using rule 19 (case_list)]
    $default   reduce using rule 19 (case_list)

    stmt  go to state 61
    expr  go to state 23


state 111

   11 stmt: FOR '(' VARIABLE '=' expr ';' expr ';' VARIABLE '=' . expr ')' stmt

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 31
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    '('        shift, and go to state 20

    expr  go to state 112


state 112

   11 stmt: FOR '(' VARIABLE '=' expr ';' expr ';' VARIABLE '=' expr . ')' stmt
   32 expr: expr . '+' expr
   33     | expr . '-' expr
   34     | expr . '*' expr
   35     | expr . '/' expr
   36     | expr . '%' expr
   37     | expr . AND expr
   38     | expr . OR expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . LE expr
   43     | expr . GE expr
   44     | expr . EQ expr
   45     | expr . NE expr

    OR   shift, and go to state 38
    AND  shift, and go to state 39
    NE   shift, and go to state 40
    EQ   shift, and go to state 41
    '<'  shift, and go to state 42
    '>'  shift, and go to state 43
    GE   shift, and go to state 44
    LE   shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '%'  shift, and go to state 50
    ')'  shift, and go to state 113


state 113

   11 stmt: FOR '(' VARIABLE '=' expr ';' expr ';' VARIABLE '=' expr ')' . stmt

    INTEGER    shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    VAL_TRUE   shift, and go to state 7
    VAL_FALSE  shift, and go to state 8
    VARIABLE   shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    FOR        shift, and go to state 12
    SWITCH     shift, and go to state 13
    BREAK      shift, and go to state 14
    REPEAT     shift, and go to state 15
    PRINT      shift, and go to state 16
    '-'        shift, and go to state 17
    '!'        shift, and go to state 18
    ';'        shift, and go to state 19
    '('        shift, and go to state 20
    '{'        shift, and go to state 21

    stmt  go to state 114
    expr  go to state 23


state 114

   11 stmt: FOR '(' VARIABLE '=' expr ';' expr ';' VARIABLE '=' expr ')' stmt .

    $default  reduce using rule 11 (stmt)
